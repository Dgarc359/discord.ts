"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4938],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>u});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},m=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=p(t),u=a,h=c["".concat(l,".").concat(u)]||c[u]||d[u]||i;return t?r.createElement(h,s(s({ref:n},m),{},{components:t})):r.createElement(h,s({ref:n},m))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=c;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var p=2;p<i;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},5331:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const i={},s="@Permission",o={unversionedId:"decorators/general/permission",id:"decorators/general/permission",title:"@Permission",description:"Define permission for your application command or simple command.",source:"@site/docs/decorators/general/permission.md",sourceDirName:"decorators/general",slug:"/decorators/general/permission",permalink:"/docs/decorators/general/permission",draft:!1,editUrl:"https://github.com/oceanroleplay/discord.ts/edit/main/docs/docs/decorators/general/permission.md",tags:[],version:"current",lastUpdatedBy:"dependabot[bot]",lastUpdatedAt:1657623941,formattedLastUpdatedAt:"Jul 12, 2022",frontMatter:{},sidebar:"docSidebar",previous:{title:"@Once - Discord events",permalink:"/docs/decorators/general/once"},next:{title:"@Reaction",permalink:"/docs/decorators/general/reaction"}},l={},p=[{value:"Supported with",id:"supported-with",level:2},{value:"Setup permissions",id:"setup-permissions",level:2},{value:"Permissions at class level",id:"permissions-at-class-level",level:2},{value:"Example - Dynamic permission resolver",id:"example---dynamic-permission-resolver",level:2},{value:"Signature",id:"signature",level:2},{value:"type: Boolean",id:"type-boolean",level:2},{value:"type: IPermissions",id:"type-ipermissions",level:2},{value:"id",id:"id",level:3},{value:"type",id:"type",level:3},{value:"permission",id:"permission-1",level:3},{value:"Make changes to",id:"make-changes-to",level:2}],m={toc:p};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"permission"},"@Permission"),(0,a.kt)("p",null,"Define permission for your application command or simple command."),(0,a.kt)("p",null,"The permissions are based on a ",(0,a.kt)("strong",{parentName:"p"},"role id")," or ",(0,a.kt)("strong",{parentName:"p"},"user id")," that you specify on the @Permission decorator"),(0,a.kt)("p",null,"The permissions will be set when you call ",(0,a.kt)("inlineCode",{parentName:"p"},"client.initApplicationPermissions()")),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"From discord developer docs:"),(0,a.kt)("p",{parentName:"admonition"},"For now, if you don't have permission to use a command, they'll show up in the command picker as disabled and unusable. They will not be hidden.")),(0,a.kt)("h2",{id:"supported-with"},"Supported with"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"../gui/context-menu"},"@ContextMenu")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"../commands/simple-command"},"@SimpleCommand")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"../commands/slash"},"@Slash"))),(0,a.kt)("h2",{id:"setup-permissions"},"Setup permissions"),(0,a.kt)("p",null,"You can decorate your method with one or more @Permission decorators."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\nclass Example {\n  // We will enable command for specific users/roles only, so disable it for everyone\n  @Permission(false)\n  // This command is available only to the user whose USER_ID is mentioned\n  @Permission({ id: "USER_ID", type: "USER", permission: true })\n  // Users with the specified ROLE_ID can run this command\n  @Permission({ id: "ROLE_ID", type: "ROLE", permission: true })\n  @Slash("hello")\n  private hello() {\n    // ...\n  }\n}\n')),(0,a.kt)("h2",{id:"permissions-at-class-level"},"Permissions at class level"),(0,a.kt)("p",null,"You can set the permissions for all @Slash inside the class by decorating the class with @Permission"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\n// We will enable command for specific users/roles only, so disable it for everyone\n@Permission(false)\n// Below commands are available only to the user whose USER_ID is mentioned\n@Permission({ id: "USER_ID", type: "USER", permission: true })\n// Users with the specified ROLE_ID can run this class commands\n@Permission({ id: "ROLE_ID", type: "ROLE", permission: true })\nclass Example {\n  @Slash("hello")\n  private hello() {\n    // ...\n  }\n\n  @Slash("hello2")\n  private hello2() {\n    // ...\n  }\n}\n')),(0,a.kt)("h2",{id:"example---dynamic-permission-resolver"},"Example - Dynamic permission resolver"),(0,a.kt)("p",null,"Whenever permissions are required, dynamic resolvers are called. Such as, When ",(0,a.kt)("inlineCode",{parentName:"p"},"initApplicationPermissions")," or simple command execution is performed. A dynamic permission resolver is helpful for saving permissions in the database."),(0,a.kt)("p",null,"Note: In order to refresh application permissions dynamically, run ",(0,a.kt)("inlineCode",{parentName:"p"},"initApplicationPermissions")," anywhere."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'@Discord()\n@Permission(false) // We will enable command for specific users/roles only, so disable it for everyone\n@Permission(async (guild, cmd): Promise<ApplicationCommandPermissions[]> => {\n  const getResponse = () => {\n    return new Promise((resolve) => {\n      setTimeout(function () {\n        resolve(true);\n      }, 5000);\n    });\n  };\n  await getResponse(); // add delay\n  return { id: "462341082919731200", permission: true, type: "USER" };\n})\nclass Example {\n  @Slash("hello") // Only the role that has this ROLE_ID can use this command\n  private hello() {\n    // ...\n  }\n\n  @Slash("hello2") // Only the role that has this ROLE_ID can use this command\n  private hello2() {\n    // ...\n  }\n}\n')),(0,a.kt)("h2",{id:"signature"},"Signature"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"@Permission(\n  permission: boolean | IPermissions\n): ClassMethodDecorator\n")),(0,a.kt)("h2",{id:"type-boolean"},"type: Boolean"),(0,a.kt)("p",null,"Overwrite default permission (aka permission for everyone) for application/simple command. When true, the command can be used by anyone except those who have been denied by the @Permission decorator, vice versa."),(0,a.kt)("h2",{id:"type-ipermissions"},"type: IPermissions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type IPermissions =\n  | ApplicationCommandPermissions\n  | ApplicationCommandPermissions[]\n  | ((\n      guild: Guild,\n      command: ApplicationCommandMixin | SimpleCommandMessage\n    ) =>\n      | ApplicationCommandPermissions\n      | ApplicationCommandPermissions[]\n      | Promise<ApplicationCommandPermissions>\n      | Promise<ApplicationCommandPermissions[]>);\n")),(0,a.kt)("h3",{id:"id"},"id"),(0,a.kt)("p",null,"The id if the user or role"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"type"),(0,a.kt)("th",{parentName:"tr",align:null},"required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Snowflake"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,a.kt)("h3",{id:"type"},"type"),(0,a.kt)("p",null,"It specify if the permission is given to a user or a role"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"type"),(0,a.kt)("th",{parentName:"tr",align:null},"required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"ROLE ","|"," USER"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,a.kt)("h3",{id:"permission-1"},"permission"),(0,a.kt)("p",null,"It specify if the permission is granted or restricted"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"type"),(0,a.kt)("th",{parentName:"tr",align:null},"required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"boolean"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,a.kt)("h2",{id:"make-changes-to"},"Make changes to"),(0,a.kt)("p",null,"It either extends or overwrites data configured in below decorators, however, the order of decorators matters."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/decorators/general/discord"},"@Discord")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/decorators/commands/simple-command"},"@SimpleCommand")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/decorators/commands/slash"},"@Slash")))}d.isMDXComponent=!0}}]);